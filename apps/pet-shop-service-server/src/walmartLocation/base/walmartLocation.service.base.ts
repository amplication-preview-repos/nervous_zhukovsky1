/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  WalmartLocation as PrismaWalmartLocation,
} from "@prisma/client";

export class WalmartLocationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WalmartLocationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.walmartLocation.count(args);
  }

  async walmartLocations(
    args: Prisma.WalmartLocationFindManyArgs
  ): Promise<PrismaWalmartLocation[]> {
    return this.prisma.walmartLocation.findMany(args);
  }
  async walmartLocation(
    args: Prisma.WalmartLocationFindUniqueArgs
  ): Promise<PrismaWalmartLocation | null> {
    return this.prisma.walmartLocation.findUnique(args);
  }
  async createWalmartLocation(
    args: Prisma.WalmartLocationCreateArgs
  ): Promise<PrismaWalmartLocation> {
    return this.prisma.walmartLocation.create(args);
  }
  async updateWalmartLocation(
    args: Prisma.WalmartLocationUpdateArgs
  ): Promise<PrismaWalmartLocation> {
    return this.prisma.walmartLocation.update(args);
  }
  async deleteWalmartLocation(
    args: Prisma.WalmartLocationDeleteArgs
  ): Promise<PrismaWalmartLocation> {
    return this.prisma.walmartLocation.delete(args);
  }
}
