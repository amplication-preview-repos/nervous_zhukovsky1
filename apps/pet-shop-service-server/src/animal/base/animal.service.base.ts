/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Animal as PrismaAnimal } from "@prisma/client";

export class AnimalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AnimalCountArgs, "select">): Promise<number> {
    return this.prisma.animal.count(args);
  }

  async animals(args: Prisma.AnimalFindManyArgs): Promise<PrismaAnimal[]> {
    return this.prisma.animal.findMany(args);
  }
  async animal(
    args: Prisma.AnimalFindUniqueArgs
  ): Promise<PrismaAnimal | null> {
    return this.prisma.animal.findUnique(args);
  }
  async createAnimal(args: Prisma.AnimalCreateArgs): Promise<PrismaAnimal> {
    return this.prisma.animal.create(args);
  }
  async updateAnimal(args: Prisma.AnimalUpdateArgs): Promise<PrismaAnimal> {
    return this.prisma.animal.update(args);
  }
  async deleteAnimal(args: Prisma.AnimalDeleteArgs): Promise<PrismaAnimal> {
    return this.prisma.animal.delete(args);
  }
}
